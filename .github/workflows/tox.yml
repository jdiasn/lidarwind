name: lidarwind_test

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]
  # schedule:
  #   - cron: "7 18 * * 0"

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 3
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
    - name: checkout lidarwind
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-v4-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-v4-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .[plots,test]

    - name: Cache TOX
      uses: actions/cache@v3
      with:
        path: .tox/
        key: ${{ runner.os }}-tox-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-tox-

    - name: Test with TOX
      run: |
        tox

  coverage:
    runs-on: ubuntu-latest

    steps:
    - name: checkout lidarwind
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"
        cache-dependency-path: 'pyproject.toml'

    - name: Coverage report
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pytest --cov=./ --cov-report=xml
       # pytest --cov=./ --cov-append --cov-report=xml --current-env --nbval-lax notebooks/turbulence_6beam_data.ipynb
       # pytest --cov=./ --cov-append --cov-report=xml --current-env --nbval-lax notebooks/merging_6beam_data.ipynb
       # pytest --cov=./ --cov-append --cov-report=xml --current-env --nbval-lax notebooks/dbs_scans.ipynb
       # pytest --cov=./ --cov-append --cov-report=xml --current-env --nbval-lax notebooks/reading_long_dbs.ipynb


    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        verbose: true
